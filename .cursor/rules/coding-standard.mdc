---
alwaysApply: true
---
### Always use while writing spring code

- Use constructor injection.
- Use java-doc comments for public methods and fields.

### Service template (Java)
```java
package org.openapitools.service;

import org.springframework.stereotype.Service;

/**
 * Provides operations related to pets.
 */
@Service
public class PetLookupService {
    /**
     * Find a pet name by its identifier.
     * @param petId unique pet identifier
     * @return the pet name if found, otherwise an empty Optional
     */
    public java.util.Optional<String> findPetNameById(long petId) {
        // Implement minimal required logic
        return java.util.Optional.empty();
    }
}
```

### Controller wiring example (Java)
```java
package org.openapitools.api;

import org.openapitools.service.PetLookupService;
import org.springframework.http.ResponseEntity;

public class PetApiController {
    private final PetLookupService petLookupService;

    public PetApiController(PetLookupService petLookupService) {
        this.petLookupService = petLookupService;
    }

    /**
     * Get pet name by id
     */
    public ResponseEntity<String> getPetNameById(Long petId) {
        return petLookupService.findPetNameById(petId)
            .map(ResponseEntity::ok)
            .orElseGet(() -> ResponseEntity.notFound().build());
    }
}
```
